/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author root
 */
public class ConnectionJPanel extends javax.swing.JPanel {

    private Connection con;
    String tableName;

    /**
     * Creates new form SettingsJPanel
     */
    public ConnectionJPanel() {
        initComponents();
    }

    public ConnectionJPanel(Connection con) {
        initComponents();
        this.con = con;
        emptyTable();//clears rows
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Col 1", "Col 2", "Col 3", "Col 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    public void setConnection(Connection con) {
        this.con = con;
    }

    public void setTableName(String tableName) {
        this.tableName = tableName;

    }

    private void emptyTable() {
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
    }

    public String getTableParam() {

        MainJPanel.CustomTextField textField = new MainJPanel.CustomTextField();
        Object[] obj = {"Table name:\n", textField};
        Object stringArray[] = {"OK", "Cancel"};
        if (JOptionPane.showOptionDialog(null, obj, "Please Enter Table name",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource("/images/logo.png")), stringArray, obj) == JOptionPane.YES_OPTION) {
        } else {
            emptyTable();
        }
        return textField.getText();
    }

    public void populateTable() {
        try {
            if (con != null) {
                String sql = "SELECT * FROM " + tableName;
                ResultSet rs = con.createStatement().executeQuery(sql);
                TableModel model = util.DbUtils.resultSetToTableModel(rs);
                jTable1.setModel(model);
            } else {
                emptyTable();
            }

        } catch (SQLException ex) {
            //ex.printStackTrace();
            System.err.println("No connections " + ex.getMessage());
        }
    }
}
