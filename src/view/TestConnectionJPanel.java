/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.LayoutManager;
import java.sql.Connection;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.Config;
import util.DBConnection;

/**
 *
 * @author root
 */
public class TestConnectionJPanel extends javax.swing.JPanel implements DBConnection.DBConnectionInfo, Builder.RDBMSIface {

    String url, host, database, username, password, port;
    Connection con;
    ConnectionInterface connectionInterface;
    String error;
    String  driver;

    /**
     * Creates new form SettingsJPanel
     */
    public TestConnectionJPanel() {
        initComponents();
        detectOS();
        connectionInterface = new Builder.ConnectionClass();
        jButtonConnect.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldVJDBCUrl = new javax.swing.JTextField();
        jTextFieldHost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDatabase = new javax.swing.JTextField();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jButtonConnect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();

        jLabel2.setText("JDBC URL:");

        jLabel3.setText("Host:");

        jLabel4.setText("Database:");

        jLabel5.setText("Username:");

        jLabel6.setText("Pasword");

        jButtonConnect.setText("Connect");
        jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectActionPerformed(evt);
            }
        });

        jLabel1.setText("Port:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldVJDBCUrl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldVJDBCUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonConnect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectActionPerformed
        testConnection();// TODO add your handling code here:
    }//GEN-LAST:event_jButtonConnectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButtonConnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextFieldDatabase;
    private javax.swing.JTextField jTextFieldHost;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldUsername;
    private javax.swing.JTextField jTextFieldVJDBCUrl;
    // End of variables declaration//GEN-END:variables

    private void detectOS() {
        String os = util.Config.OS;
        if (os.equalsIgnoreCase("linux")) {
            url = Config.connection_MYSQL;
        } else {
            url = Config.connection_MSSQL;
        }
        jTextFieldVJDBCUrl.setText(url);
    }

    private void testConnection() {
        HashMap<String, String> hashMap = new HashMap();
        host = jTextFieldHost.getText();
        database = jTextFieldDatabase.getText();
        username = jTextFieldUsername.getText();
        password = jPasswordField.getText();
        port = jTextFieldPort.getText();
        hashMap.put("host", host);
        hashMap.put("database", database);
        hashMap.put("username", username);
        hashMap.put("password", password);
        hashMap.put("port", port);

        con = DBConnection.getConnection(url, database, username, password, port,driver);
        if (null != con) {
            connectionInterface.setConnection(con, hashMap);
            JOptionPane.showMessageDialog(this, "Connection  Successful");
        } else {
            JOptionPane.showMessageDialog(this, "Connection Not Successful");
        }

    }

    public boolean isConnection() {
        boolean isConnected = false;
        HashMap<String, String> hashMap = new HashMap();
        host = jTextFieldHost.getText();
        database = jTextFieldDatabase.getText();
        username = jTextFieldUsername.getText();
        password = jPasswordField.getText();
        port = jTextFieldHost.getText();
        hashMap.put("host", host);
        hashMap.put("database", database);
        hashMap.put("username", username);
        hashMap.put("password", password);
        hashMap.put("port", port);

        try {
            con = DBConnection.getConnection(url, database, username, password, port,driver);
            if (null != con) {
                isConnected = true;
                connectionInterface.setConnection(con, hashMap);
            } else {

            }
        } catch (Exception e) {

        }
        return isConnected;

    }

    public static TestConnectionJPanel getInstance() {
        return new TestConnectionJPanel();
    }

    @Override
    public void setConnectionError(String error) {
        this.error = error;
        connectionInterface.setConnectionError(error);
    }

    @Override
    public void setParams(String url,String driver) {
        this.url = url;
        this.driver = driver;
        if (jTextFieldVJDBCUrl.getText().length() > 0) {
            jTextFieldVJDBCUrl.setText("");
            jTextFieldVJDBCUrl.setText(url);
        }else{
            jTextFieldVJDBCUrl.setText(url);
        }

        
        //To change body of generated methods, choose Tools | Templates.
    }

    public static interface ConnectionInterface {

        void setConnection(Connection con, HashMap<String, String> hashMap);

        void setConnectionError(String error);
    }
}
